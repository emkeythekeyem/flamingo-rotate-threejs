{"version":3,"sources":["js/blob.js"],"names":["canvas","ctx","render","init","blob","Blob","points","i","numPoints","point","Point","divisional","push","position","pointsArray","radius","center","clearRect","width","height","solveWith","p0","p1","_p2","beginPath","moveTo","x","y","p2","xc","yc","quadraticCurveTo","fillStyle","color","fill","strokeStyle","requestAnimationFrame","bind","item","value","_color","HTMLElement","tagName","toLowerCase","_canvas","getContext","_points","_radius","_position","Math","PI","_running","running","azimuth","parent","_components","cos","sin","acceleration","random","leftPoint","rightPoint","radialEffect","elasticity","speed","friction","_acceleration","_speed","_radialEffect","components","_elasticity","_friction","document","createElement","setAttribute","classList","add","body","appendChild","resize","window","innerWidth","innerHeight","addEventListener","oldMousePoint","hover","mouseMove","e","pos","diff","clientX","clientY","dist","sqrt","angle","mousePos","vector","atan2","nearestPoint","distanceFromPoint","forEach","abs","strength","event"],"mappings":"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","file":"blob.e4f09e93.js","sourceRoot":"..","sourcesContent":["let canvas, ctx;\nlet render, init;\nlet blob;\n\nclass Blob {\n  constructor() {\n    this.points = [];\n  }\n  \n  init() {\n    for(let i = 0; i < this.numPoints; i++) {\n      let point = new Point(this.divisional * ( i + 1 ), this);\n      // point.acceleration = -1 + Math.random() * 2;\n      this.push(point);\n    }\n  }\n  \n  render() {\n    let canvas = this.canvas;\n    let ctx = this.ctx;\n    let position = this.position;\n    let pointsArray = this.points;\n    let radius = this.radius;\n    let points = this.numPoints;\n    let divisional = this.divisional;\n    let center = this.center;\n    \n    ctx.clearRect(0,0,canvas.width,canvas.height);\n    \n    pointsArray[0].solveWith(pointsArray[points-1], pointsArray[1]);\n\n    let p0 = pointsArray[points-1].position;\n    let p1 = pointsArray[0].position;\n    let _p2 = p1;\n\n    ctx.beginPath();\n    ctx.moveTo(center.x, center.y);\n    ctx.moveTo( (p0.x + p1.x) / 2, (p0.y + p1.y) / 2 );\n\n    for(let i = 1; i < points; i++) {\n      \n      pointsArray[i].solveWith(pointsArray[i-1], pointsArray[i+1] || pointsArray[0]);\n\n      let p2 = pointsArray[i].position;\n      var xc = (p1.x + p2.x) / 2;\n      var yc = (p1.y + p2.y) / 2;\n      ctx.quadraticCurveTo(p1.x, p1.y, xc, yc);\n      // ctx.lineTo(p2.x, p2.y);\n\n      ctx.fillStyle = '#fff';\n      // ctx.fillRect(p1.x-2.5, p1.y-2.5, 5, 5);\n\n      p1 = p2;\n    }\n\n    var xc = (p1.x + _p2.x) / 2;\n    var yc = (p1.y + _p2.y) / 2;\n    ctx.quadraticCurveTo(p1.x, p1.y, xc, yc);\n    // ctx.lineTo(_p2.x, _p2.y);\n\n    // ctx.closePath();\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.strokeStyle = '#fff';\n    // ctx.stroke();\n    \n/*\n    ctx.fillStyle = '#000000';\n    if(this.mousePos) {\n      let angle = Math.atan2(this.mousePos.y, this.mousePos.x) + Math.PI;\n      ctx.fillRect(center.x + Math.cos(angle) * this.radius, center.y + Math.sin(angle) * this.radius, 5, 5);\n    }\n*/\n    requestAnimationFrame(this.render.bind(this));\n  }\n  \n  push(item) {\n    if(item instanceof Point) {\n      this.points.push(item);\n    }\n  }\n  \n  set color(value) {\n    this._color = value;\n  }\n  get color() {\n    return this._color || '#fff';\n  }\n  \n  set canvas(value) {\n    if(value instanceof HTMLElement && value.tagName.toLowerCase() === 'canvas') {\n      this._canvas = canvas;\n      this.ctx = this._canvas.getContext('2d');\n    }\n  }\n  get canvas() {\n    return this._canvas;\n  }\n  \n  set numPoints(value) {\n    if(value > 2) {\n      this._points = value;\n    }\n  }\n  get numPoints() {\n    return this._points || 32;\n  }\n  \n  set radius(value) {\n    if(value > 0) {\n      this._radius = value;\n    }\n  }\n  get radius() {\n    return this._radius || 250;\n  }\n  \n  set position(value) {\n    if(typeof value == 'object' && value.x && value.y) {\n      this._position = value;\n    }\n  }\n  get position() {\n    return this._position || { x: 0.5, y: 0.5 };\n  }\n  \n  get divisional() {\n    return Math.PI * 2 / this.numPoints;\n  }\n  \n  get center() {\n    return { x: this.canvas.width * this.position.x * 1.5, y: this.canvas.height * this.position.y  };\n  }\n  \n  set running(value) {\n    this._running = value === true;\n  }\n  get running() {\n    return this.running !== false;\n  }\n}\n\nclass Point {\n  constructor(azimuth, parent) {\n    this.parent = parent;\n    this.azimuth = Math.PI - azimuth;\n    this._components = { \n      x: Math.cos(this.azimuth),\n      y: Math.sin(this.azimuth)\n    };\n    \n    this.acceleration = -0.3 + Math.random() * 0.6;\n  }\n  \n  solveWith(leftPoint, rightPoint) {\n    this.acceleration = (-0.3 * this.radialEffect + ( leftPoint.radialEffect - this.radialEffect ) + ( rightPoint.radialEffect - this.radialEffect )) * this.elasticity - this.speed * this.friction;\n  }\n  \n  set acceleration(value) {\n    if(typeof value == 'number') {\n      this._acceleration = value;\n      this.speed += this._acceleration * 2;\n    }\n  }\n  get acceleration() {\n    return this._acceleration || 0;\n  }\n  \n  set speed(value) {\n    if(typeof value == 'number') {\n      this._speed = value;\n      this.radialEffect += this._speed * 5;\n    }\n  }\n  get speed() {\n    return this._speed || 0;\n  }\n  \n  set radialEffect(value) {\n    if(typeof value == 'number') {\n      this._radialEffect = value;\n    }\n  }\n  get radialEffect() {\n    return this._radialEffect || 0;\n  }\n  \n  get position() {\n    return { \n      x: this.parent.center.x + this.components.x * (this.parent.radius + this.radialEffect), \n      y: this.parent.center.y + this.components.y * (this.parent.radius + this.radialEffect) \n    }\n  }\n  \n  get components() {\n    return this._components;\n  }\n\n  set elasticity(value) {\n    if(typeof value === 'number') {\n      this._elasticity = value;\n    }\n  }\n  get elasticity() {\n    return this._elasticity || 0.001;\n  }\n  set friction(value) {\n    if(typeof value === 'number') {\n      this._friction = value;\n    }\n  }\n  get friction() {\n    return this._friction || 0.0085;\n  }\n}\n\nblob = new Blob;\n\ninit = function() {\n  canvas = document.createElement('canvas');\n  canvas.setAttribute('touch-action', 'none');\n  canvas.classList.add('blob')\n\n  document.body.appendChild(canvas);\n\n  let resize = function() {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n  }\n  window.addEventListener('resize', resize);\n  resize();\n  \n  let oldMousePoint = { x: 0, y: 0};\n  let hover = false;\n  let mouseMove = function(e) {\n    \n    let pos = blob.center;\n    let diff = { x: e.clientX - pos.x, y: e.clientY - pos.y };\n    let dist = Math.sqrt((diff.x * diff.x) + (diff.y * diff.y));\n    let angle = null;\n    \n    blob.mousePos = { x: pos.x - e.clientX, y: pos.y - e.clientY };\n    \n    if(dist < blob.radius && hover === false) {\n      let vector = { x: e.clientX - pos.x, y: e.clientY - pos.y };\n      angle = Math.atan2(vector.y, vector.x);\n      hover = true;\n      // blob.color = '#77FF00';\n    } else if(dist > blob.radius && hover === true){ \n      let vector = { x: e.clientX - pos.x, y: e.clientY - pos.y };\n      angle = Math.atan2(vector.y, vector.x);\n      hover = false;\n      blob.color = null;\n    }\n    \n    if(typeof angle == 'number') {\n      \n      let nearestPoint = null;\n      let distanceFromPoint = 100;\n      \n      blob.points.forEach((point)=> {\n        if(Math.abs(angle - point.azimuth) < distanceFromPoint) {\n          // console.log(point.azimuth, angle, distanceFromPoint);\n          nearestPoint = point;\n          distanceFromPoint = Math.abs(angle - point.azimuth);\n        }\n        \n      });\n      \n      if(nearestPoint) {\n        let strength = { x: oldMousePoint.x - e.clientX, y: oldMousePoint.y - e.clientY };\n        strength = Math.sqrt((strength.x * strength.x) + (strength.y * strength.y)) * 10;\n        if(strength > 100) strength = 100;\n        nearestPoint.acceleration = strength / 100 * (hover ? -1 : 1);\n      }\n    }\n    \n    oldMousePoint.x = e.clientX;\n    oldMousePoint.y = e.clientY;\n  }\n  // window.addEventListener('mousemove', mouseMove);\n  window.addEventListener('pointermove', mouseMove);\n  \n  blob.canvas = canvas;\n  blob.init();\n  blob.render();\n}\n\n\nwindow.addEventListener('DOMContentLoaded', (event) => {\n    init();\n  });\n"]}